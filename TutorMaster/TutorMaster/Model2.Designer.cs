//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "ClassesToFaculty", "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TutorMaster.Class), "FacultyClasses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.FacultyClass), true)]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "ClassToRequest", "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TutorMaster.Class), "TutorRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.TutorRequest), true)]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "FacultyToClasses", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TutorMaster.Faculty), "FacultyClasses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.FacultyClass), true)]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "UsersToFac", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TutorMaster.User), "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TutorMaster.Faculty), true)]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "StudentToRequest", "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TutorMaster.Student), "TutorRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.TutorRequest), true)]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "UserToStudents", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TutorMaster.User), "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TutorMaster.Student), true)]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "StudentClasses", "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.Class), "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.Student))]
[assembly: EdmRelationshipAttribute("TutorMasterDBModel1", "StudentCommitments", "Commitments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.Commitment), "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorMaster.Student))]

#endregion

namespace TutorMaster
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TutorMasterDBEntities3 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TutorMasterDBEntities3 object using the connection string found in the 'TutorMasterDBEntities3' section of the application configuration file.
        /// </summary>
        public TutorMasterDBEntities3() : base("name=TutorMasterDBEntities3", "TutorMasterDBEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TutorMasterDBEntities3 object.
        /// </summary>
        public TutorMasterDBEntities3(string connectionString) : base(connectionString, "TutorMasterDBEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TutorMasterDBEntities3 object.
        /// </summary>
        public TutorMasterDBEntities3(EntityConnection connection) : base(connection, "TutorMasterDBEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Commitment> Commitments
        {
            get
            {
                if ((_Commitments == null))
                {
                    _Commitments = base.CreateObjectSet<Commitment>("Commitments");
                }
                return _Commitments;
            }
        }
        private ObjectSet<Commitment> _Commitments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Faculty> Faculties
        {
            get
            {
                if ((_Faculties == null))
                {
                    _Faculties = base.CreateObjectSet<Faculty>("Faculties");
                }
                return _Faculties;
            }
        }
        private ObjectSet<Faculty> _Faculties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FacultyClass> FacultyClasses
        {
            get
            {
                if ((_FacultyClasses == null))
                {
                    _FacultyClasses = base.CreateObjectSet<FacultyClass>("FacultyClasses");
                }
                return _FacultyClasses;
            }
        }
        private ObjectSet<FacultyClass> _FacultyClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TutorRequest> TutorRequests
        {
            get
            {
                if ((_TutorRequests == null))
                {
                    _TutorRequests = base.CreateObjectSet<TutorRequest>("TutorRequests");
                }
                return _TutorRequests;
            }
        }
        private ObjectSet<TutorRequest> _TutorRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Commitments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommitments(Commitment commitment)
        {
            base.AddObject("Commitments", commitment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Faculties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFaculties(Faculty faculty)
        {
            base.AddObject("Faculties", faculty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FacultyClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacultyClasses(FacultyClass facultyClass)
        {
            base.AddObject("FacultyClasses", facultyClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TutorRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTutorRequests(TutorRequest tutorRequest)
        {
            base.AddObject("TutorRequests", tutorRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="classCode">Initial value of the ClassCode property.</param>
        public static Class CreateClass(global::System.String classCode)
        {
            Class @class = new Class();
            @class.ClassCode = classCode;
            return @class;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassCode
        {
            get
            {
                return _ClassCode;
            }
            set
            {
                if (_ClassCode != value)
                {
                    OnClassCodeChanging(value);
                    ReportPropertyChanging("ClassCode");
                    _ClassCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClassCode");
                    OnClassCodeChanged();
                }
            }
        }
        private global::System.String _ClassCode;
        partial void OnClassCodeChanging(global::System.String value);
        partial void OnClassCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "ClassesToFaculty", "FacultyClasses")]
        public EntityCollection<FacultyClass> FacultyClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FacultyClass>("TutorMasterDBModel1.ClassesToFaculty", "FacultyClasses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FacultyClass>("TutorMasterDBModel1.ClassesToFaculty", "FacultyClasses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "ClassToRequest", "TutorRequest")]
        public EntityCollection<TutorRequest> TutorRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TutorRequest>("TutorMasterDBModel1.ClassToRequest", "TutorRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TutorRequest>("TutorMasterDBModel1.ClassToRequest", "TutorRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "StudentClasses", "Students")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("TutorMasterDBModel1.StudentClasses", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("TutorMasterDBModel1.StudentClasses", "Students", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="Commitment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commitment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Commitment object.
        /// </summary>
        /// <param name="cmtID">Initial value of the CmtID property.</param>
        public static Commitment CreateCommitment(global::System.Int32 cmtID)
        {
            Commitment commitment = new Commitment();
            commitment.CmtID = cmtID;
            return commitment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CmtID
        {
            get
            {
                return _CmtID;
            }
            set
            {
                if (_CmtID != value)
                {
                    OnCmtIDChanging(value);
                    ReportPropertyChanging("CmtID");
                    _CmtID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CmtID");
                    OnCmtIDChanged();
                }
            }
        }
        private global::System.Int32 _CmtID;
        partial void OnCmtIDChanging(global::System.Int32 value);
        partial void OnCmtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.String _StartTime;
        partial void OnStartTimeChanging(global::System.String value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Class
        {
            get
            {
                return _Class;
            }
            set
            {
                OnClassChanging(value);
                ReportPropertyChanging("Class");
                _Class = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Class");
                OnClassChanged();
            }
        }
        private global::System.String _Class;
        partial void OnClassChanging(global::System.String value);
        partial void OnClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Open
        {
            get
            {
                return _Open;
            }
            set
            {
                OnOpenChanging(value);
                ReportPropertyChanging("Open");
                _Open = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Open");
                OnOpenChanged();
            }
        }
        private global::System.String _Open;
        partial void OnOpenChanging(global::System.String value);
        partial void OnOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tutoring
        {
            get
            {
                return _Tutoring;
            }
            set
            {
                OnTutoringChanging(value);
                ReportPropertyChanging("Tutoring");
                _Tutoring = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tutoring");
                OnTutoringChanged();
            }
        }
        private global::System.String _Tutoring;
        partial void OnTutoringChanging(global::System.String value);
        partial void OnTutoringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Weekly
        {
            get
            {
                return _Weekly;
            }
            set
            {
                OnWeeklyChanging(value);
                ReportPropertyChanging("Weekly");
                _Weekly = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Weekly");
                OnWeeklyChanged();
            }
        }
        private global::System.String _Weekly;
        partial void OnWeeklyChanging(global::System.String value);
        partial void OnWeeklyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "StudentCommitments", "Students")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("TutorMasterDBModel1.StudentCommitments", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("TutorMasterDBModel1.StudentCommitments", "Students", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Faculty object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Faculty CreateFaculty(global::System.Int32 id)
        {
            Faculty faculty = new Faculty();
            faculty.ID = id;
            return faculty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "FacultyToClasses", "FacultyClasses")]
        public EntityCollection<FacultyClass> FacultyClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FacultyClass>("TutorMasterDBModel1.FacultyToClasses", "FacultyClasses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FacultyClass>("TutorMasterDBModel1.FacultyToClasses", "FacultyClasses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "UsersToFac", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TutorMasterDBModel1.UsersToFac", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TutorMasterDBModel1.UsersToFac", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TutorMasterDBModel1.UsersToFac", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TutorMasterDBModel1.UsersToFac", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="FacultyClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FacultyClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FacultyClass object.
        /// </summary>
        /// <param name="key">Initial value of the Key property.</param>
        public static FacultyClass CreateFacultyClass(global::System.String key)
        {
            FacultyClass facultyClass = new FacultyClass();
            facultyClass.Key = key;
            return facultyClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                if (_Key != value)
                {
                    OnKeyChanging(value);
                    ReportPropertyChanging("Key");
                    _Key = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Key");
                    OnKeyChanged();
                }
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                OnFacultyIDChanging(value);
                ReportPropertyChanging("FacultyID");
                _FacultyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyID");
                OnFacultyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FacultyID;
        partial void OnFacultyIDChanging(Nullable<global::System.Int32> value);
        partial void OnFacultyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassCode
        {
            get
            {
                return _ClassCode;
            }
            set
            {
                OnClassCodeChanging(value);
                ReportPropertyChanging("ClassCode");
                _ClassCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassCode");
                OnClassCodeChanged();
            }
        }
        private global::System.String _ClassCode;
        partial void OnClassCodeChanging(global::System.String value);
        partial void OnClassCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "ClassesToFaculty", "Classes")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TutorMasterDBModel1.ClassesToFaculty", "Classes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TutorMasterDBModel1.ClassesToFaculty", "Classes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TutorMasterDBModel1.ClassesToFaculty", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("TutorMasterDBModel1.ClassesToFaculty", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "FacultyToClasses", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("TutorMasterDBModel1.FacultyToClasses", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("TutorMasterDBModel1.FacultyToClasses", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("TutorMasterDBModel1.FacultyToClasses", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("TutorMasterDBModel1.FacultyToClasses", "Faculty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Student CreateStudent(global::System.Int32 id)
        {
            Student student = new Student();
            student.ID = id;
            return student;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tutee
        {
            get
            {
                return _Tutee;
            }
            set
            {
                OnTuteeChanging(value);
                ReportPropertyChanging("Tutee");
                _Tutee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tutee");
                OnTuteeChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tutee;
        partial void OnTuteeChanging(Nullable<global::System.Boolean> value);
        partial void OnTuteeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tutor
        {
            get
            {
                return _Tutor;
            }
            set
            {
                OnTutorChanging(value);
                ReportPropertyChanging("Tutor");
                _Tutor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tutor");
                OnTutorChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tutor;
        partial void OnTutorChanging(Nullable<global::System.Boolean> value);
        partial void OnTutorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "StudentToRequest", "TutorRequest")]
        public EntityCollection<TutorRequest> TutorRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TutorRequest>("TutorMasterDBModel1.StudentToRequest", "TutorRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TutorRequest>("TutorMasterDBModel1.StudentToRequest", "TutorRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "UserToStudents", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TutorMasterDBModel1.UserToStudents", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TutorMasterDBModel1.UserToStudents", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TutorMasterDBModel1.UserToStudents", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TutorMasterDBModel1.UserToStudents", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "StudentClasses", "Classes")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("TutorMasterDBModel1.StudentClasses", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("TutorMasterDBModel1.StudentClasses", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "StudentCommitments", "Commitments")]
        public EntityCollection<Commitment> Commitments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commitment>("TutorMasterDBModel1.StudentCommitments", "Commitments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commitment>("TutorMasterDBModel1.StudentCommitments", "Commitments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="TutorRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TutorRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TutorRequest object.
        /// </summary>
        /// <param name="key">Initial value of the Key property.</param>
        public static TutorRequest CreateTutorRequest(global::System.Int32 key)
        {
            TutorRequest tutorRequest = new TutorRequest();
            tutorRequest.Key = key;
            return tutorRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key
        {
            get
            {
                return _Key;
            }
            set
            {
                if (_Key != value)
                {
                    OnKeyChanging(value);
                    ReportPropertyChanging("Key");
                    _Key = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Key");
                    OnKeyChanged();
                }
            }
        }
        private global::System.Int32 _Key;
        partial void OnKeyChanging(global::System.Int32 value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ID;
        partial void OnIDChanging(Nullable<global::System.Int32> value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassCode
        {
            get
            {
                return _ClassCode;
            }
            set
            {
                OnClassCodeChanging(value);
                ReportPropertyChanging("ClassCode");
                _ClassCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassCode");
                OnClassCodeChanged();
            }
        }
        private global::System.String _ClassCode;
        partial void OnClassCodeChanging(global::System.String value);
        partial void OnClassCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "ClassToRequest", "Classes")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TutorMasterDBModel1.ClassToRequest", "Classes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TutorMasterDBModel1.ClassToRequest", "Classes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TutorMasterDBModel1.ClassToRequest", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("TutorMasterDBModel1.ClassToRequest", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "StudentToRequest", "Students")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("TutorMasterDBModel1.StudentToRequest", "Students").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("TutorMasterDBModel1.StudentToRequest", "Students").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("TutorMasterDBModel1.StudentToRequest", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("TutorMasterDBModel1.StudentToRequest", "Students", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TutorMasterDBModel1", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.ID = id;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "UsersToFac", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("TutorMasterDBModel1.UsersToFac", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("TutorMasterDBModel1.UsersToFac", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("TutorMasterDBModel1.UsersToFac", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("TutorMasterDBModel1.UsersToFac", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TutorMasterDBModel1", "UserToStudents", "Students")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("TutorMasterDBModel1.UserToStudents", "Students").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("TutorMasterDBModel1.UserToStudents", "Students").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("TutorMasterDBModel1.UserToStudents", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("TutorMasterDBModel1.UserToStudents", "Students", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
